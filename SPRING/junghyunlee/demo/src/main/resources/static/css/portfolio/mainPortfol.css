#header {
    background: pink;
    height: 215px;
}
#main {
    background: red;
    /* min-height를 주면 <main>영역 내부에 하위 요소들이
       작더라도 최소 길이를 유지하면서 높이가 초과하면 자동으로 확장 됨 */
    min-height: 700px;
}
#footer {
    background: yellow;
    height: 300px;
    width: 100%;
    margin: auto;
    padding: 0 8px 0 8px; /* 각각 위 오른쪽 아래 왼쪽 */
    display: flex;
    flex-direction: column; /* 요소들을 수평정렬 */
    font-size: 12px;
}

#footer ul { /* ul의 하위요소(li) 수평정렬을 위해 기본마진, 패딩 제거 */
     margin: 0;
     padding: 0;
 }

.notice_box {
    /* flex는 수평이 될 요소들의 Container(box-container)에
       display: flex;를 적용합니다.
       (세부 속성이 필요하지 않은 경우도 많기 때문에 상당히 쉽고
       빠르게 수평 요소를 구성할 수 있습니다. */
    display: flex;
    /* flex의 시작은 부모 태그(container)에
       display:flex 스타일을 부여하는 것으로
       시작이 됩니다. */
    flex: 1;
    justify-content: space-between; /* 양끝 정렬 */
    align-items: center;
    border-bottom: 1px solid #f1f3f6;
}
.notice_box a {
    font-weight: bold;
    color: black;
}
.aside_box {
    flex: 2;
    display: flex;
    align-items: center;
    border-bottom: 1px solid #f1f3f6;
}

.area_user_row {
    display: flex;
    flex: 4;
    line-height: 2em; /* 줄간격 */
}
.area_user_row span {
    flex: 1;
}
.area_user_row ul {
    flex: 6;
}

.area_user_row ul > li {
    display: inline-block; /* li 수평정렬하는 방법 */
    margin-left: 8px;
}
.area_col {
    flex: 1;
    display: flex;
}
.area_col .ac_content {
    line-height: 20px;
}
.area_col .ac_img {
    width: 60px;
    height: 60px;
}
.bottom_box {
    flex: 3;
    padding-top: 20px;
    font-size: 14px;
}
.bottom_box ul > li {
    display: inline-block; /* 수평정렬 */
    margin-left: 8px;
}
.bottom_box ul > li:last-child { /* 마지막 li요소 (Naver Corp.) 굵게 */
    font-weight: bold;
}
/* 재사용 클래스 */
.color_naver {
    color: #03cf5d;
}
.text_bold-13 {
    font-weight: bold;
    font-size: 13px;
}
