{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/hz/hakwon/GroupStudy/JAVASCRIPT/HyeonJeong/JavaScript_Work/src/21_02_04/promiseAsynchronous/PromiseParallelTest.js\";\n\nfunction plus(num1, num2) {\n  return new promise((resolve, reject) => {\n    setTimeout(() => {\n      var res = num1 + num2;\n      console.log(`${num1} + ${num2}`);\n      resolve(res);\n    }, 4000);\n  });\n}\n\nfunction minus(num1, num2) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      var res = num1 - num2;\n      console.log(num1 + \" - \" + num2 + \" = \");\n      resolve(res);\n    }, 2000);\n  });\n}\n\nfunction mult(num1, num2) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      var res = num1 * num2;\n      console.log(num1 + \" * \" + num2 + \" = \");\n      resolve(res);\n    }, 1500);\n  });\n}\n\nfunction divide(num1, num2) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      var res = num1 / num2;\n      console.log(num1 + \" / \" + num2 + \" = \");\n      resolve(res);\n    }, 1000);\n  });\n}\n\nplus(100, 200).then(response => {\n  console.log(\"plus: \" + response);\n  return minus(100, 200);\n}).then(response => {\n  console.log(\"minus: \" + response);\n  return mult(100, 200);\n}).then(response => {\n  console.log(\"mult: \" + response);\n  return divide(100, 200);\n}).then(response => {\n  console.log(\"divide: \" + response);\n});\n\nconst PromiseParallelTest = () => {\n  console.log(\"PromiseParallelTest Start\");\n  console.log(\"PromiseParallelTest Fin\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"PromiseParallelTest\",\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"PromiseParallelTest\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 4\n  }, this);\n};\n\n_c = PromiseParallelTest;\nexport default PromiseParallelTest;\n\nvar _c;\n\n$RefreshReg$(_c, \"PromiseParallelTest\");","map":{"version":3,"sources":["/home/hz/hakwon/GroupStudy/JAVASCRIPT/HyeonJeong/JavaScript_Work/src/21_02_04/promiseAsynchronous/PromiseParallelTest.js"],"names":["plus","num1","num2","promise","resolve","reject","setTimeout","res","console","log","minus","Promise","mult","divide","then","response","PromiseParallelTest"],"mappings":";;;AAAA,SAASA,IAAT,CAAeC,IAAf,EAAqBC,IAArB,EAA2B;AAC1B,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAASC,MAAT,KAAoB;AACtCC,IAAAA,UAAU,CAAC,MAAM;AAChB,UAAIC,GAAG,GAAGN,IAAI,GAAGC,IAAjB;AAEAM,MAAAA,OAAO,CAACC,GAAR,CAAa,GAAER,IAAK,MAAKC,IAAK,EAA9B;AACAE,MAAAA,OAAO,CAACG,GAAD,CAAP;AACA,KALS,EAKR,IALQ,CAAV;AAMA,GAPM,CAAP;AAQA;;AAED,SAASG,KAAT,CAAgBT,IAAhB,EAAsBC,IAAtB,EAA4B;AAC3B,SAAO,IAAIS,OAAJ,CAAY,CAACP,OAAD,EAAUC,MAAV,KAAqB;AACvCC,IAAAA,UAAU,CAAC,MAAM;AAChB,UAAIC,GAAG,GAAGN,IAAI,GAAGC,IAAjB;AAEAM,MAAAA,OAAO,CAACC,GAAR,CAAYR,IAAI,GAAG,KAAP,GAAeC,IAAf,GAAsB,KAAlC;AACAE,MAAAA,OAAO,CAACG,GAAD,CAAP;AACA,KALS,EAKR,IALQ,CAAV;AAMA,GAPM,CAAP;AAQA;;AAED,SAASK,IAAT,CAAeX,IAAf,EAAqBC,IAArB,EAA2B;AAC1B,SAAO,IAAIS,OAAJ,CAAY,CAACP,OAAD,EAAUC,MAAV,KAAqB;AACvCC,IAAAA,UAAU,CAAC,MAAM;AAChB,UAAIC,GAAG,GAAGN,IAAI,GAAGC,IAAjB;AAEAM,MAAAA,OAAO,CAACC,GAAR,CAAYR,IAAI,GAAG,KAAP,GAAeC,IAAf,GAAsB,KAAlC;AACAE,MAAAA,OAAO,CAACG,GAAD,CAAP;AACA,KALS,EAKP,IALO,CAAV;AAMA,GAPM,CAAP;AAQA;;AAED,SAASM,MAAT,CAAiBZ,IAAjB,EAAuBC,IAAvB,EAA6B;AAC5B,SAAO,IAAIS,OAAJ,CAAY,CAACP,OAAD,EAAUC,MAAV,KAAqB;AACvCC,IAAAA,UAAU,CAAC,MAAM;AAChB,UAAIC,GAAG,GAAGN,IAAI,GAAGC,IAAjB;AAEAM,MAAAA,OAAO,CAACC,GAAR,CAAYR,IAAI,GAAG,KAAP,GAAeC,IAAf,GAAsB,KAAlC;AACAE,MAAAA,OAAO,CAACG,GAAD,CAAP;AACA,KALS,EAKP,IALO,CAAV;AAMA,GAPM,CAAP;AAQA;;AAEDP,IAAI,CAAC,GAAD,EAAM,GAAN,CAAJ,CACEc,IADF,CACQC,QAAD,IAAc;AACnBP,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAWM,QAAvB;AACA,SAAOL,KAAK,CAAC,GAAD,EAAM,GAAN,CAAZ;AACA,CAJF,EAKEI,IALF,CAKQC,QAAD,IAAc;AACnBP,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAYM,QAAxB;AACA,SAAOH,IAAI,CAAC,GAAD,EAAM,GAAN,CAAX;AACA,CARF,EASEE,IATF,CASQC,QAAD,IAAc;AACnBP,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAWM,QAAvB;AACA,SAAOF,MAAM,CAAC,GAAD,EAAM,GAAN,CAAb;AACA,CAZF,EAaEC,IAbF,CAaQC,QAAD,IAAa;AACnBP,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAaM,QAAzB;AACC,CAfF;;AAiBA,MAAMC,mBAAmB,GAAG,MAAM;AACjCR,EAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA,2BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKA,CATD;;KAAMO,mB;AAWN,eAAeA,mBAAf","sourcesContent":["function plus (num1, num2) {\n\treturn new promise((resolve,reject) => {\n\t\tsetTimeout(() => { \n\t\t\tvar res = num1 + num2\n\n\t\t\tconsole.log(`${num1} + ${num2}`)\n\t\t\tresolve(res)\n\t\t},4000)\n\t})\n}\n\nfunction minus (num1, num2) {\n\treturn new Promise((resolve, reject) => {\n\t\tsetTimeout(() => {\n\t\t\tvar res = num1 - num2\n\n\t\t\tconsole.log(num1 + \" - \" + num2 + \" = \")\n\t\t\tresolve(res)\n\t\t},2000)\n\t})\n}\n\nfunction mult (num1, num2) {\n\treturn new Promise((resolve, reject) => {\n\t\tsetTimeout(() => {\n\t\t\tvar res = num1 * num2\n\n\t\t\tconsole.log(num1 + \" * \" + num2 + \" = \")\n\t\t\tresolve(res)\n\t\t}, 1500)\n\t})\n}\n\nfunction divide (num1, num2) {\n\treturn new Promise((resolve, reject) => {\n\t\tsetTimeout(() => {\n\t\t\tvar res = num1 / num2\n\t\t\t\n\t\t\tconsole.log(num1 + \" / \" + num2 + \" = \")\n\t\t\tresolve(res)\n\t\t}, 1000)\n\t})\n}\n\nplus(100, 200)\t\n\t.then((response) => {\n\t\tconsole.log(\"plus: \" + response)\n\t\treturn minus(100, 200)\n\t})\n\t.then((response) => {\n\t\tconsole.log(\"minus: \" + response)\n\t\treturn mult(100, 200)\n\t})\n\t.then((response) => {\n\t\tconsole.log(\"mult: \" + response)\n\t\treturn divide(100, 200)\n\t})\n\t.then((response) =>{\n\tconsole.log(\"divide: \" + response)\n\t})\n\nconst PromiseParallelTest = () => {\n\tconsole.log(\"PromiseParallelTest Start\")\n\tconsole.log(\"PromiseParallelTest Fin\")\n\n\treturn (\n\t\t\t<div className=\"PromiseParallelTest\">\n\t\t\t\t\t<p>PromiseParallelTest</p>\n\t\t\t</div>\n\t)\n}\n\nexport default PromiseParallelTest"]},"metadata":{},"sourceType":"module"}