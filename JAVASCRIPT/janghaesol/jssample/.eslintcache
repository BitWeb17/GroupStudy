[{"/Users/haesoljang/proj/GroupStudy/JAVASCRIPT/janghaesol/jssample/src/index.js":"1","/Users/haesoljang/proj/GroupStudy/JAVASCRIPT/janghaesol/jssample/src/reportWebVitals.js":"2","/Users/haesoljang/proj/GroupStudy/JAVASCRIPT/janghaesol/jssample/src/App.js":"3","/Users/haesoljang/proj/GroupStudy/JAVASCRIPT/janghaesol/jssample/src/jan0201/Homework1.js":"4","/Users/haesoljang/proj/GroupStudy/JAVASCRIPT/janghaesol/jssample/src/jan0201/Homework2.js":"5","/Users/haesoljang/proj/GroupStudy/JAVASCRIPT/janghaesol/jssample/src/jan0201/Homework3.js":"6","/Users/haesoljang/proj/GroupStudy/JAVASCRIPT/janghaesol/jssample/src/jan0201/HomeworkHard1.js":"7","/Users/haesoljang/proj/GroupStudy/JAVASCRIPT/janghaesol/jssample/src/jan0202/TwoHomework1.js":"8"},{"size":721,"mtime":1612262743970,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1611996833396,"results":"11","hashOfConfig":"10"},{"size":528,"mtime":1611996833393,"results":"12","hashOfConfig":"10"},{"size":1223,"mtime":1612173224178,"results":"13","hashOfConfig":"10"},{"size":964,"mtime":1612173224177,"results":"14","hashOfConfig":"10"},{"size":1606,"mtime":1612198860021,"results":"15","hashOfConfig":"10"},{"size":1221,"mtime":1612198377681,"results":"16","hashOfConfig":"10"},{"size":3469,"mtime":1612277127420,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1a64swo",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/haesoljang/proj/GroupStudy/JAVASCRIPT/janghaesol/jssample/src/index.js",[],"/Users/haesoljang/proj/GroupStudy/JAVASCRIPT/janghaesol/jssample/src/reportWebVitals.js",[],["41","42"],"/Users/haesoljang/proj/GroupStudy/JAVASCRIPT/janghaesol/jssample/src/App.js",[],["43","44"],"/Users/haesoljang/proj/GroupStudy/JAVASCRIPT/janghaesol/jssample/src/jan0201/Homework1.js",["45"],"//아래와 같은 수열이 있다.\n// 1, 1, 1, 3, 5, 9, 17, 31, 57, 105, 193, ......\n// 이 수열의 20 번째 값을 구할 수 있도록 프로그래밍 해보자!\n\n//마지막 3개를 더하면 다음 숫자가 됨.\n//첫 배열 [1,1,1]을 만들고  \n//for문을 돌려서 배열이 하나씩 증가하는 식을 만들고 \n//찻번째 배열부터 돌려서 17번째 있는 숫자가 20번째 값(주의: 배열번호는 0부터니까 16번쨰 배열끝값)\n//또는 for문을 돌면서 배열 뒤에 하나씩 ...arr, x로 붙인다.\nfunction Homework1() {\n    \n    let startArr = [1, 1, 1]\n    let findNum = 0\n    let i = 0\n    let MAX = 17\n\n\n\n    for(i = 0 ; i < MAX; i++){\n        let plusNum = startArr[i] + startArr[i+1] + startArr[i+2]\n        startArr = [...startArr,plusNum]\n            \n            if(i == (MAX-1)){\n                findNum = plusNum\n            }\n            \n            console.log(startArr)\n            console.log((i+4)+\"번째 수는 = \"+plusNum)\n    }\n    \n    console.log(\"찾는 20번째 수는 = \" + findNum)\n\n    return(\n        <div className = \"Homework1\">\n            <p>\n                Homework1\n            </p>\n    \n        </div>\n        )\n}\n\nexport default Homework1\n","/Users/haesoljang/proj/GroupStudy/JAVASCRIPT/janghaesol/jssample/src/jan0201/Homework2.js",["46"],"// 자바스크립트 배열에 랜덤한 숫자를 n개 생성한다.\n//     n개의 배열에서 3의 배수만 골라보도록 하자!\n//     (이 문제는 중복을 허용한다)\n\n//랜덤배열 공간 1~10을 생성\n//그안에 숫자 1~30을 넣는다\n//그중 3의배수만 추출\n\n\n\nfunction Homework2() {\n    \n\nlet SPACEMAX = 10\nlet MAXNUM = 30\nlet MIN = 1\nlet spaceRandNum = Math.floor(Math.random()*(SPACEMAX - MIN +1) + MIN)\n\nlet randArr = []\nlet pickedArr = []\n\nfunction randValueF() {\n    return Math.floor(Math.random() * (MAXNUM - MIN + 1) + MIN)\n}\n\nfor(let i = 0 ; i < spaceRandNum; i ++){\n    let valueRand = randValueF()\n    randArr.push(valueRand)\n}\n\nconsole.log(randArr)\n\nfor(let j = 0 ; j < randArr.length; j++){\n    if(randArr[j]%3 == 0){\n        pickedArr.push(randArr[j])\n    }\n}\nconsole.log(pickedArr)\n\nreturn(\n    <div className = \"Homework2\">\n        <p>\n            Homework2\n        </p>\n\n    </div>\n    )\n}\n\nexport default Homework2","/Users/haesoljang/proj/GroupStudy/JAVASCRIPT/janghaesol/jssample/src/jan0201/Homework3.js",["47","48","49","50"],"// 2번 문제에서 중복을 허용하지 않고 5의 배수만 골라보자!\n//     또한 고른 값들은 모두 내림차순으로 정렬되어야 할 것이다.\n\nfunction Homework3() {\n    \n\n    let SPACEMAX = 10\n    let MAXNUM = 30\n    let MIN = 1\n    let spaceRandNum = Math.floor(Math.random()*(SPACEMAX - MIN +1) + MIN)\n    \n    let randArr = []\n    let pickedArr = []\n    let trashArr = []\n    let ERR = -1\n    let flowArr = []\n\n    function randValueF() {\n        return Math.floor(Math.random() * (MAXNUM - MIN + 1) + MIN)\n    }\n    console.log(\"space의 값은\" + spaceRandNum)\n    for(let i = 0 ; i < spaceRandNum; i ++){\n        let valueRand = randValueF()\n        console.log(i+\"번째 값은\"+valueRand)\n\n        if(randArr.indexOf(valueRand) == ERR  ){\n            randArr.push(valueRand)\n            console.log(randArr)\n        }else{\n            console.log(\"중복으로 처리되지 않은 값은: \" +valueRand)\n        }\n    }\n    \n    console.log(randArr)\n    \n    for(let j = 0 ; j < randArr.length; j++){\n        \n        if(randArr[j]%5 == 0){\n            pickedArr.push(randArr[j])\n        }\n    }\n    flowArr = pickedArr.sort((a,b) => b - a)\n    console.log(pickedArr)\n    console.log(flowArr)\n    if(flowArr.indexOf(flowArr[0]) == ERR){\n        console.log(\"표시할 5의 배수의 값이 없습니다.\")\n    }else{\n        console.log(\"뽑힌 랜덤값중 5의 배수는 : \" + flowArr)\n    }\n    return(\n        <div className = \"Homework3\">\n            <p>\n                Homework3\n            </p>\n    \n        </div>\n        )\n    }\n    \n    export default Homework3","/Users/haesoljang/proj/GroupStudy/JAVASCRIPT/janghaesol/jssample/src/jan0201/HomeworkHard1.js",["51","52","53"],"function HomeworkHard1() {\n    class userFindNum{\n        constructor(findPointNum){\n            this.findPointNum = findPointNum\n        }\n    \n    get findPointNum(){\n        return this.findPointNum\n    }\n\n    set findPointNum(findNum){\n        {   \n            this.findPointNum = findNum < 0? 0 : findNum\n        }\n    }\n}\n    let user = new userFindNum(20)//setter,getter 에게 돌아가게 20을 입력\n\n    class startFindNum extends userFindNum{\n        constructor(){\n            super();\n            numFindMath()\n        }\n    }\nfunction numFindMath(findNum) {\n    let findMax = findNum -3\n    let startArr = [1,1,1]\n    for(let i = 0 ; i < findMax; i++){\n        let plusNum = startArr[i] + startArr[i+1] + startArr[i+2]\n        startArr = [...startArr,plusNum]\n            \n            if(i === (findMax-1)){\n                findNum = plusNum\n            }\n            \n            console.log(startArr)\n            console.log((i+4)+\"번째 수는 = \"+plusNum)\n    }\n    \n    console.log(\"찾는 20번째 수는 = \" + findNum)\n}\n    return(\n        <div className = \"HomeworkHard1\">\n            <p>\n            HomeworkHard1\n            </p>\n    \n        </div>\n        )\n}\n\n\nexport default HomeworkHard1\n",["54","55"],"/Users/haesoljang/proj/GroupStudy/JAVASCRIPT/janghaesol/jssample/src/jan0202/TwoHomework1.js",[],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"56","replacedBy":"60"},{"ruleId":"58","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":23,"column":18,"nodeType":"64","messageId":"65","endLine":23,"endColumn":20},{"ruleId":"62","severity":1,"message":"63","line":34,"column":21,"nodeType":"64","messageId":"65","endLine":34,"endColumn":23},{"ruleId":"66","severity":1,"message":"67","line":14,"column":9,"nodeType":"68","messageId":"69","endLine":14,"endColumn":17},{"ruleId":"62","severity":1,"message":"63","line":26,"column":39,"nodeType":"64","messageId":"65","endLine":26,"endColumn":41},{"ruleId":"62","severity":1,"message":"63","line":38,"column":25,"nodeType":"64","messageId":"65","endLine":38,"endColumn":27},{"ruleId":"62","severity":1,"message":"63","line":45,"column":36,"nodeType":"64","messageId":"65","endLine":45,"endColumn":38},{"ruleId":"70","severity":1,"message":"71","line":12,"column":9,"nodeType":"72","messageId":"73","endLine":14,"endColumn":10},{"ruleId":"66","severity":1,"message":"74","line":17,"column":9,"nodeType":"68","messageId":"69","endLine":17,"endColumn":13},{"ruleId":"66","severity":1,"message":"75","line":19,"column":11,"nodeType":"68","messageId":"69","endLine":19,"endColumn":23},{"ruleId":"56","replacedBy":"76"},{"ruleId":"58","replacedBy":"77"},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],["78"],["79"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'trashArr' is assigned a value but never used.","Identifier","unusedVar","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'user' is assigned a value but never used.","'startFindNum' is defined but never used.",["78"],["79"],"no-global-assign","no-unsafe-negation"]