[{"/Users/haesoljang/proj/GroupStudy/JAVASCRIPT/janghaesol/jssample/src/index.js":"1","/Users/haesoljang/proj/GroupStudy/JAVASCRIPT/janghaesol/jssample/src/reportWebVitals.js":"2","/Users/haesoljang/proj/GroupStudy/JAVASCRIPT/janghaesol/jssample/src/App.js":"3","/Users/haesoljang/proj/GroupStudy/JAVASCRIPT/janghaesol/jssample/src/jan0201/Homework1.js":"4","/Users/haesoljang/proj/GroupStudy/JAVASCRIPT/janghaesol/jssample/src/jan0201/Homework2.js":"5","/Users/haesoljang/proj/GroupStudy/JAVASCRIPT/janghaesol/jssample/src/jan0201/Homework3.js":"6","/Users/haesoljang/proj/GroupStudy/JAVASCRIPT/janghaesol/jssample/src/jan0201/HomeworkHard1.js":"7","/Users/haesoljang/proj/GroupStudy/JAVASCRIPT/janghaesol/jssample/src/jan0202/TwoHomework1.js":"8","/Users/haesoljang/proj/GroupStudy/JAVASCRIPT/janghaesol/jssample/src/jan0202/prob.js":"9"},{"size":705,"mtime":1612441218624,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1611996833396,"results":"12","hashOfConfig":"11"},{"size":528,"mtime":1611996833393,"results":"13","hashOfConfig":"11"},{"size":1223,"mtime":1612173224178,"results":"14","hashOfConfig":"11"},{"size":964,"mtime":1612173224177,"results":"15","hashOfConfig":"11"},{"size":1606,"mtime":1612198860021,"results":"16","hashOfConfig":"11"},{"size":1221,"mtime":1612198377681,"results":"17","hashOfConfig":"11"},{"size":7666,"mtime":1612619641914,"results":"18","hashOfConfig":"11"},{"size":6034,"mtime":1612442177784,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},"1a64swo",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"23"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"23"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"23"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"23"},"/Users/haesoljang/proj/GroupStudy/JAVASCRIPT/janghaesol/jssample/src/index.js",["47","48","49","50"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Homework1 from './jan0201/Homework1';\nimport Homework2 from './jan0201/Homework2';\nimport Homework3 from './jan0201/Homework3';\nimport TwoHomework1 from './jan0202/TwoHomework1';\nimport Prob from './jan0202/prob';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <TwoHomework1/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["51","52"],"/Users/haesoljang/proj/GroupStudy/JAVASCRIPT/janghaesol/jssample/src/reportWebVitals.js",[],"/Users/haesoljang/proj/GroupStudy/JAVASCRIPT/janghaesol/jssample/src/App.js",[],["53","54"],"/Users/haesoljang/proj/GroupStudy/JAVASCRIPT/janghaesol/jssample/src/jan0201/Homework1.js",["55"],"//아래와 같은 수열이 있다.\n// 1, 1, 1, 3, 5, 9, 17, 31, 57, 105, 193, ......\n// 이 수열의 20 번째 값을 구할 수 있도록 프로그래밍 해보자!\n\n//마지막 3개를 더하면 다음 숫자가 됨.\n//첫 배열 [1,1,1]을 만들고  \n//for문을 돌려서 배열이 하나씩 증가하는 식을 만들고 \n//찻번째 배열부터 돌려서 17번째 있는 숫자가 20번째 값(주의: 배열번호는 0부터니까 16번쨰 배열끝값)\n//또는 for문을 돌면서 배열 뒤에 하나씩 ...arr, x로 붙인다.\nfunction Homework1() {\n    \n    let startArr = [1, 1, 1]\n    let findNum = 0\n    let i = 0\n    let MAX = 17\n\n\n\n    for(i = 0 ; i < MAX; i++){\n        let plusNum = startArr[i] + startArr[i+1] + startArr[i+2]\n        startArr = [...startArr,plusNum]\n            \n            if(i == (MAX-1)){\n                findNum = plusNum\n            }\n            \n            console.log(startArr)\n            console.log((i+4)+\"번째 수는 = \"+plusNum)\n    }\n    \n    console.log(\"찾는 20번째 수는 = \" + findNum)\n\n    return(\n        <div className = \"Homework1\">\n            <p>\n                Homework1\n            </p>\n    \n        </div>\n        )\n}\n\nexport default Homework1\n","/Users/haesoljang/proj/GroupStudy/JAVASCRIPT/janghaesol/jssample/src/jan0201/Homework2.js",["56"],"// 자바스크립트 배열에 랜덤한 숫자를 n개 생성한다.\n//     n개의 배열에서 3의 배수만 골라보도록 하자!\n//     (이 문제는 중복을 허용한다)\n\n//랜덤배열 공간 1~10을 생성\n//그안에 숫자 1~30을 넣는다\n//그중 3의배수만 추출\n\n\n\nfunction Homework2() {\n    \n\nlet SPACEMAX = 10\nlet MAXNUM = 30\nlet MIN = 1\nlet spaceRandNum = Math.floor(Math.random()*(SPACEMAX - MIN +1) + MIN)\n\nlet randArr = []\nlet pickedArr = []\n\nfunction randValueF() {\n    return Math.floor(Math.random() * (MAXNUM - MIN + 1) + MIN)\n}\n\nfor(let i = 0 ; i < spaceRandNum; i ++){\n    let valueRand = randValueF()\n    randArr.push(valueRand)\n}\n\nconsole.log(randArr)\n\nfor(let j = 0 ; j < randArr.length; j++){\n    if(randArr[j]%3 == 0){\n        pickedArr.push(randArr[j])\n    }\n}\nconsole.log(pickedArr)\n\nreturn(\n    <div className = \"Homework2\">\n        <p>\n            Homework2\n        </p>\n\n    </div>\n    )\n}\n\nexport default Homework2","/Users/haesoljang/proj/GroupStudy/JAVASCRIPT/janghaesol/jssample/src/jan0201/Homework3.js",["57","58","59","60"],"// 2번 문제에서 중복을 허용하지 않고 5의 배수만 골라보자!\n//     또한 고른 값들은 모두 내림차순으로 정렬되어야 할 것이다.\n\nfunction Homework3() {\n    \n\n    let SPACEMAX = 10\n    let MAXNUM = 30\n    let MIN = 1\n    let spaceRandNum = Math.floor(Math.random()*(SPACEMAX - MIN +1) + MIN)\n    \n    let randArr = []\n    let pickedArr = []\n    let trashArr = []\n    let ERR = -1\n    let flowArr = []\n\n    function randValueF() {\n        return Math.floor(Math.random() * (MAXNUM - MIN + 1) + MIN)\n    }\n    console.log(\"space의 값은\" + spaceRandNum)\n    for(let i = 0 ; i < spaceRandNum; i ++){\n        let valueRand = randValueF()\n        console.log(i+\"번째 값은\"+valueRand)\n\n        if(randArr.indexOf(valueRand) == ERR  ){\n            randArr.push(valueRand)\n            console.log(randArr)\n        }else{\n            console.log(\"중복으로 처리되지 않은 값은: \" +valueRand)\n        }\n    }\n    \n    console.log(randArr)\n    \n    for(let j = 0 ; j < randArr.length; j++){\n        \n        if(randArr[j]%5 == 0){\n            pickedArr.push(randArr[j])\n        }\n    }\n    flowArr = pickedArr.sort((a,b) => b - a)\n    console.log(pickedArr)\n    console.log(flowArr)\n    if(flowArr.indexOf(flowArr[0]) == ERR){\n        console.log(\"표시할 5의 배수의 값이 없습니다.\")\n    }else{\n        console.log(\"뽑힌 랜덤값중 5의 배수는 : \" + flowArr)\n    }\n    return(\n        <div className = \"Homework3\">\n            <p>\n                Homework3\n            </p>\n    \n        </div>\n        )\n    }\n    \n    export default Homework3","/Users/haesoljang/proj/GroupStudy/JAVASCRIPT/janghaesol/jssample/src/jan0201/HomeworkHard1.js",["61","62","63"],"function HomeworkHard1() {\n    class userFindNum{\n        constructor(findPointNum){\n            this.findPointNum = findPointNum\n        }\n    \n    get findPointNum(){\n        return this.findPointNum\n    }\n\n    set findPointNum(findNum){\n        {   \n            this.findPointNum = findNum < 0? 0 : findNum\n        }\n    }\n}\n    let user = new userFindNum(20)//setter,getter 에게 돌아가게 20을 입력\n\n    class startFindNum extends userFindNum{\n        constructor(){\n            super();\n            numFindMath()\n        }\n    }\nfunction numFindMath(findNum) {\n    let findMax = findNum -3\n    let startArr = [1,1,1]\n    for(let i = 0 ; i < findMax; i++){\n        let plusNum = startArr[i] + startArr[i+1] + startArr[i+2]\n        startArr = [...startArr,plusNum]\n            \n            if(i === (findMax-1)){\n                findNum = plusNum\n            }\n            \n            console.log(startArr)\n            console.log((i+4)+\"번째 수는 = \"+plusNum)\n    }\n    \n    console.log(\"찾는 20번째 수는 = \" + findNum)\n}\n    return(\n        <div className = \"HomeworkHard1\">\n            <p>\n            HomeworkHard1\n            </p>\n    \n        </div>\n        )\n}\n\n\nexport default HomeworkHard1\n",["64","65"],"/Users/haesoljang/proj/GroupStudy/JAVASCRIPT/janghaesol/jssample/src/jan0202/TwoHomework1.js",["66","67"],"/Users/haesoljang/proj/GroupStudy/JAVASCRIPT/janghaesol/jssample/src/jan0202/prob.js",["68","69","70","71","72","73","74"],"const AllocRandomNumber = (arr) => {\n    console.log(\"AllocRandomNumber Called\")\n\n    for(var i = 0; i < arr.length; i++) {\n        arr[i] = Math.floor(Math.random() * 10000) + 1\n    }\n}\n\nconst CheckTeamArrCount = (arr) => {\n    const TEAMMEMNUM = 4\n}\n\nconst CreateRandomTeam = (arr, num) => {\n    console.log(\"CreateRandomTeam Called\")\n\n    const ERROR = -1\n\n    let randNum\n    let range = arr.length / num\n\n    let checkTeamArrCnt = new Array(250)\n\n    // 1번째 실수: i, j의 순서를 혼동하여 거꾸로 적음\n    //           250 * 0 ~ 3 + 0 ~ 3 ===>\n    //           0 ~ 3, 250 ~ 253, 500 ~ 503, 750 ~ 753\n    // 2번째 실수: 인덱싱을 잘못했다는 것을 생각하지 않고 내부에 또 루프를 만듬\n\n    // Sol: 현재 아래 코드가 실수한 부분을 수정한 코드\n\n    // 같은 팀원들에게 같은 숫자를 부여하겠다는 의미(250개가 나오니까)\n    for(var i = 0; i < range; ) {   // 250\n        // 1번팀, 2번팀, 3번팀 ...\n        randNum = Math.floor(Math.random() * 250) + 1\n\n        if(arr.indexOf(randNum) == ERROR) {\n            for (var j = 0; j < num; j++) {   // 4\n\n                // 전략\n                // 1) 그냥 다 검사해서 집어넣기\n                //    모든 검사를 수행하므로 속도가 느려짐\n                //    반면 팀원들은 인접하지 않은 상태로 배치됨\n                // 2) 검사는 단순화하고 for문을 한 번 더 돌자!\n                //    (내부에 4개짜리 루프를 돌린다)\n                //    팀원끼리 인접해있게 됨\n\n                // 우리는 2번 전략을 사용하도록 한다.\n\n                // 0 ~ 999 ---> i, j로 표현하는 방법에 대한 고민이 필요\n                // j = 0 ~ 3\n                // i = 0 ~ 250\n                // i * range + j\n                arr[i * num + j] = randNum\n            }\n\n            i++\n        }\n    }\n}\n\nconst CheckWinner = (arr, winArr) => {\n    const CRITERIA = 1013\n    // const CRITERIA = 241\n    // const CRITERIA = 2\n\n    for(var i = 0; i < arr.length; i++) {\n        if(!(arr[i] % CRITERIA)) {\n            winArr[i] = 1\n        } else {\n            winArr[i] = 0\n        }\n    }\n}\n\nArray.prototype.arrDivide = function (num) {\n    let arr = this\n    let len = arr.length\n    // 딱 떨어지는 경우엔 floor OK\n    // 나머지가 존재할 경우 ceil 올림으로 처리하면 될 듯 ?\n    let cnt = Math.ceil(len / num)\n\n    let newArr = []\n\n    for(var i = 0; i < cnt; i++) {\n        newArr.push(arr.splice(0, num))\n    }\n\n    return newArr\n}\n\nArray.prototype.printArr = function(num) {\n    let arr = this\n    let len = arr.length\n\n    for (var i = 0; i < len; i += num) {\n        console.log(arr[i], arr[i + 1], arr[i + 2], arr[i + 3])\n    }\n}\n\nconst CalcDividend = (teamArr, winArr, price) => {\n    const ALL = 16\n    const THREEFOUR = 8\n    const TWOFOUR = 4\n    const ZERO = 0\n\n    const TEAMMEMNUM = 4\n\n    // filter, every\n    let divWinArr = winArr.arrDivide(TEAMMEMNUM)\n\n    let teamNum = divWinArr.length\n    let allClearRateArr = new Array(teamNum)\n    let subClearRateArr = new Array(teamNum)\n\n    for(var i = ZERO; i < teamNum; i++) {\n        allClearRateArr[i] = divWinArr[i].every(allClear)\n        subClearRateArr[i] = divWinArr[i].reduce(subClear)\n    }\n\n    function allClear(value) {\n        return value > ZERO\n    }\n\n    function subClear(total, value) {\n        return total + value\n    }\n\n    console.log('All Clear Team: ' + allClearRateArr)\n    console.log('Sub Clear Team: ' + subClearRateArr)\n\n    // For Debugging\n    //divWinArr.printArr(TEAMMEMNUM)\n\n    //console.log(\"divWinArr = \" + divWinArr)\n\n    // 현재까지 체크된 것이 배당금 16배수인 팀을 확보함\n    // 배당금 8배, 4배, 1배인 팀도 확보한 상태\n    // 전체 상금을 몇 등분할지에 대한 계산이 필요하다.\n    let dividendRate = allClearRateArr.reduce(checkTrueNum)\n\n    function checkTrueNum(total, value) {\n        if(value == true) {\n            return total + ALL\n        } else {\n            return total\n        }\n    }\n\n    console.log(\"All Clear Dividend Rate = \" + dividendRate)\n\n    dividendRate += subClearRateArr.reduce(allSum)\n\n    function allSum(total, value) {\n        return total + value\n    }\n\n    console.log(\"Total Dividend Rate = \" + dividendRate)\n\n    let dividend = Math.round(price / dividendRate)\n\n    console.log(\"1배수 배당금은 \" + dividend + \"입니다.\")\n    console.log(\"인당 배당금은 \" +\n        Math.round(dividend / TEAMMEMNUM) + \"입니다.\")\n\n    console.log(\"4배수 배당금은 \" + TWOFOUR * dividend + \"입니다.\")\n    console.log(\"인당 배당금은 \" +\n        Math.round(TWOFOUR * dividend / TEAMMEMNUM) + \"입니다.\")\n\n    console.log(\"8배수 배당금은 \" + THREEFOUR * dividend + \"입니다.\")\n    console.log(\"인당 배당금은 \" +\n        Math.round(THREEFOUR * dividend / TEAMMEMNUM) + \"입니다.\")\n\n    console.log(\"16배수 배당금은 \" + ALL * dividend + \"입니다.\")\n    console.log(\"인당 배당금은 \" +\n        Math.round(ALL * dividend / TEAMMEMNUM) + \"입니다.\")\n}\n\nconst Prob = () => {\n    const MAXTEAMNUM = 4\n    const NUMOFPERSON = 1000\n    const FEE = 10000000\n    const PARTICIPANTSTAKE = 0.67\n    const PRICE = NUMOFPERSON * FEE * PARTICIPANTSTAKE\n\n    console.log(\"상금 = \" + PRICE)\n\n    let arr = new Array(NUMOFPERSON)\n    let teamArr = new Array(NUMOFPERSON)\n    let WinnerArr = new Array(NUMOFPERSON)\n\n    AllocRandomNumber(arr)\n    console.log(\"After AllocRandomNumber() = \" + arr)\n\n    CreateRandomTeam(teamArr, MAXTEAMNUM)\n    console.log(\"After CreateRandomTeam() = \" + teamArr)\n\n    CheckWinner(arr, WinnerArr)\n    console.log(\"After CheckWinner() = \" + WinnerArr)\n\n    CalcDividend(teamArr, WinnerArr, PRICE)\n    console.log(\"팀 로또가 성공적으로 마무리 되었습니다.\")\n    console.log(\"다음에도 잘 부탁드립니다 호갱님 ^^\")\n\n    return (\n        <div className=\"Prob\">\n            <p>Prob</p>\n        </div>\n    )\n}\n\nexport default Prob",{"ruleId":"75","severity":1,"message":"76","line":4,"column":8,"nodeType":"77","messageId":"78","endLine":4,"endColumn":17},{"ruleId":"75","severity":1,"message":"79","line":5,"column":8,"nodeType":"77","messageId":"78","endLine":5,"endColumn":17},{"ruleId":"75","severity":1,"message":"80","line":6,"column":8,"nodeType":"77","messageId":"78","endLine":6,"endColumn":17},{"ruleId":"75","severity":1,"message":"81","line":8,"column":8,"nodeType":"77","messageId":"78","endLine":8,"endColumn":12},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"82","replacedBy":"86"},{"ruleId":"84","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":23,"column":18,"nodeType":"90","messageId":"91","endLine":23,"endColumn":20},{"ruleId":"88","severity":1,"message":"89","line":34,"column":21,"nodeType":"90","messageId":"91","endLine":34,"endColumn":23},{"ruleId":"75","severity":1,"message":"92","line":14,"column":9,"nodeType":"77","messageId":"78","endLine":14,"endColumn":17},{"ruleId":"88","severity":1,"message":"89","line":26,"column":39,"nodeType":"90","messageId":"91","endLine":26,"endColumn":41},{"ruleId":"88","severity":1,"message":"89","line":38,"column":25,"nodeType":"90","messageId":"91","endLine":38,"endColumn":27},{"ruleId":"88","severity":1,"message":"89","line":45,"column":36,"nodeType":"90","messageId":"91","endLine":45,"endColumn":38},{"ruleId":"93","severity":1,"message":"94","line":12,"column":9,"nodeType":"95","messageId":"96","endLine":14,"endColumn":10},{"ruleId":"75","severity":1,"message":"97","line":17,"column":9,"nodeType":"77","messageId":"78","endLine":17,"endColumn":13},{"ruleId":"75","severity":1,"message":"98","line":19,"column":11,"nodeType":"77","messageId":"78","endLine":19,"endColumn":23},{"ruleId":"82","replacedBy":"99"},{"ruleId":"84","replacedBy":"100"},{"ruleId":"88","severity":1,"message":"89","line":42,"column":39,"nodeType":"90","messageId":"91","endLine":42,"endColumn":41},{"ruleId":"88","severity":1,"message":"89","line":67,"column":37,"nodeType":"90","messageId":"91","endLine":67,"endColumn":39},{"ruleId":"75","severity":1,"message":"101","line":9,"column":7,"nodeType":"77","messageId":"78","endLine":9,"endColumn":24},{"ruleId":"75","severity":1,"message":"102","line":10,"column":11,"nodeType":"77","messageId":"78","endLine":10,"endColumn":21},{"ruleId":"75","severity":1,"message":"103","line":21,"column":9,"nodeType":"77","messageId":"78","endLine":21,"endColumn":24},{"ruleId":"88","severity":1,"message":"89","line":35,"column":33,"nodeType":"90","messageId":"91","endLine":35,"endColumn":35},{"ruleId":"104","severity":1,"message":"105","line":74,"column":1,"nodeType":"106","messageId":"91","endLine":88,"endColumn":2},{"ruleId":"104","severity":1,"message":"105","line":90,"column":1,"nodeType":"106","messageId":"91","endLine":97,"endColumn":2},{"ruleId":"88","severity":1,"message":"89","line":141,"column":18,"nodeType":"90","messageId":"91","endLine":141,"endColumn":20},"no-unused-vars","'Homework1' is defined but never used.","Identifier","unusedVar","'Homework2' is defined but never used.","'Homework3' is defined but never used.","'Prob' is defined but never used.","no-native-reassign",["107"],"no-negated-in-lhs",["108"],["107"],["108"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'trashArr' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'user' is assigned a value but never used.","'startFindNum' is defined but never used.",["107"],["108"],"'CheckTeamArrCount' is assigned a value but never used.","'TEAMMEMNUM' is assigned a value but never used.","'checkTeamArrCnt' is assigned a value but never used.","no-extend-native","Array prototype is read only, properties should not be added.","AssignmentExpression","no-global-assign","no-unsafe-negation"]