[{"/Users/haesoljang/proj/GroupStudy/JAVASCRIPT/janghaesol/js_set/src/index.js":"1","/Users/haesoljang/proj/GroupStudy/JAVASCRIPT/janghaesol/js_set/src/reportWebVitals.js":"2","/Users/haesoljang/proj/GroupStudy/JAVASCRIPT/janghaesol/js_set/src/set-test/NewSetTest.js":"3","/Users/haesoljang/proj/GroupStudy/JAVASCRIPT/janghaesol/js_set/src/map-test/NewMapTest.js":"4","/Users/haesoljang/proj/GroupStudy/JAVASCRIPT/janghaesol/js_set/src/map-test/MapSetTest.js":"5","/Users/haesoljang/proj/GroupStudy/JAVASCRIPT/janghaesol/js_set/src/map-test/MapDeleteTest.js":"6","/Users/haesoljang/proj/GroupStudy/JAVASCRIPT/janghaesol/js_set/src/map-test/MapIterationTest.js":"7","/Users/haesoljang/proj/GroupStudy/JAVASCRIPT/janghaesol/js_set/src/for-test/ForWithSetMap.js":"8","/Users/haesoljang/proj/GroupStudy/JAVASCRIPT/janghaesol/js_set/src/iterator-test/IteratorTest.js":"9","/Users/haesoljang/proj/GroupStudy/JAVASCRIPT/janghaesol/js_set/src/iterator-test/IteratorTest2.js":"10","/Users/haesoljang/proj/GroupStudy/JAVASCRIPT/janghaesol/js_set/src/iterator-test/IteratorTest3.js":"11","/Users/haesoljang/proj/GroupStudy/JAVASCRIPT/janghaesol/js_set/src/map-test/NewMapInitTest.js":"12","/Users/haesoljang/proj/GroupStudy/JAVASCRIPT/janghaesol/js_set/src/set-test/AddSetTest.js":"13","/Users/haesoljang/proj/GroupStudy/JAVASCRIPT/janghaesol/js_set/src/set-test/ForEachWithSet.js":"14","/Users/haesoljang/proj/GroupStudy/JAVASCRIPT/janghaesol/js_set/src/set-test/NewSetinitTest.js":"15","/Users/haesoljang/proj/GroupStudy/JAVASCRIPT/janghaesol/js_set/src/set-test/SetEntryIterationTest.js":"16","/Users/haesoljang/proj/GroupStudy/JAVASCRIPT/janghaesol/js_set/src/set-test/SetKeyIterationTest.js":"17"},{"size":1624,"mtime":1612340684302,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1612330401604,"results":"20","hashOfConfig":"19"},{"size":224,"mtime":1612347968576,"results":"21","hashOfConfig":"19"},{"size":230,"mtime":1612347968576,"results":"22","hashOfConfig":"19"},{"size":710,"mtime":1612338548277,"results":"23","hashOfConfig":"19"},{"size":488,"mtime":1612337523665,"results":"24","hashOfConfig":"19"},{"size":1095,"mtime":1612338301907,"results":"25","hashOfConfig":"19"},{"size":760,"mtime":1612347968576,"results":"26","hashOfConfig":"19"},{"size":1174,"mtime":1612347968576,"results":"27","hashOfConfig":"19"},{"size":749,"mtime":1612347968576,"results":"28","hashOfConfig":"19"},{"size":548,"mtime":1612336739474,"results":"29","hashOfConfig":"19"},{"size":407,"mtime":1612347968576,"results":"30","hashOfConfig":"19"},{"size":493,"mtime":1612347968576,"results":"31","hashOfConfig":"19"},{"size":756,"mtime":1612347968576,"results":"32","hashOfConfig":"19"},{"size":382,"mtime":1612347968576,"results":"33","hashOfConfig":"19"},{"size":678,"mtime":1612347968576,"results":"34","hashOfConfig":"19"},{"size":513,"mtime":1612338301907,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ylr3nx",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/haesoljang/proj/GroupStudy/JAVASCRIPT/janghaesol/js_set/src/index.js",[],"/Users/haesoljang/proj/GroupStudy/JAVASCRIPT/janghaesol/js_set/src/reportWebVitals.js",[],["74","75"],"/Users/haesoljang/proj/GroupStudy/JAVASCRIPT/janghaesol/js_set/src/set-test/NewSetTest.js",[],"/Users/haesoljang/proj/GroupStudy/JAVASCRIPT/janghaesol/js_set/src/map-test/NewMapTest.js",[],"/Users/haesoljang/proj/GroupStudy/JAVASCRIPT/janghaesol/js_set/src/map-test/MapSetTest.js",[],"/Users/haesoljang/proj/GroupStudy/JAVASCRIPT/janghaesol/js_set/src/map-test/MapDeleteTest.js",[],"/Users/haesoljang/proj/GroupStudy/JAVASCRIPT/janghaesol/js_set/src/map-test/MapIterationTest.js",[],"/Users/haesoljang/proj/GroupStudy/JAVASCRIPT/janghaesol/js_set/src/for-test/ForWithSetMap.js",["76"],"const ForWithSetMap = () => {\n    let mapData = new Map(\n        [\n            [\"David\",\"Physics\"],\n            [\"Kevin\",\"Society\"]\n            \n        ]\n    )\n    console.log(\"\")\n    console.log(mapData)\n//Map {\"David\" => \"Physics\", \"Kevin\" => \"Society\"}\n    for(let data of mapData){\n       console.log(data)\n       //[\"David\", \"Physics\"]\n       //[\"Kevin\", \"Society\"]\n    }\n\n    let setData = new Set(\n        [\"David\",,\"Kevin\"]\n    )\n\n    console.log(setData)\n//Set {\"David\", undefined, \"Kevin\"}\n    for(let data of setData){\n        console.log(data)\n        //David\n        //undefined\n        //Kevin\n    }\n    \n    return(\n        <div className = \"ForWithSetMap\">\n            <p>ForWithSetMap</p>\n        </div>\n    )\n\n}\n\nexport default ForWithSetMap","/Users/haesoljang/proj/GroupStudy/JAVASCRIPT/janghaesol/js_set/src/iterator-test/IteratorTest.js",["77"],"class IteratorManager {\n    constructor(){\n        this.itrData = []\n    }\n    add(data){\n        this.itrData.push(data)\n    }\n    [Symbol.iterator](){\n        return this.itrData.values()\n    }\n}\n\nconst IteratorTest = () => {\n    let iterData = [\"one\",\"two\",\"three\"]\n\n    for(let entry of iterData){\n        console.log(entry)\n        //one\n        //two\n        //three\n    }\n    let varData = [\"four\",\"five\",\"six\"]\n\n    let itr = varData[Symbol.iterator]()\n\n    console.log(itr.next())\n    //{value: \"four\", done: false}\n    console.log(itr.next())\n    //{value: \"five\", done: false}\n    console.log(itr.next())\n    //{value: \"six\", done: false}\n    console.log(itr.next())\n    //{value: undefined, done: true}\n\n    let varItr = varData.values()\n\n    console.log(varItr.next())\n    //{value: \"four\", done: false}\n    console.log(varItr.next())\n     //{value: \"five\", done: false}\n    console.log(varItr.next())\n    //{value: \"six\", done: false}\n    console.log(varItr.next())\n    //{value: undefined, done: true}\n    \n    \n    return(\n        <div className = \"IteratorTest\">\n            <p>IteratorTest</p>\n        </div>\n    )\n\n}\n\n\n    \n\n\n\n\nexport default IteratorTest","/Users/haesoljang/proj/GroupStudy/JAVASCRIPT/janghaesol/js_set/src/iterator-test/IteratorTest2.js",["78"],"class IteratorManager {\n    constructor(){\n        this.itrData = []\n    }\n    add(data){\n        this.itrData.push(data)\n    }\n    [Symbol.iterator](){\n        return this.itrData.values()\n    }\n}\n\nconst IteratorTest2 = () => {\n    let iterData = [\"one\",\"two\",\"three\"]\n\n    for(let entry of iterData){\n        console.log(entry)\n    }\n    let varData = [\"four\",\"five\",\"six\"]\n\n    let itr = varData[Symbol.iterator]()\n\n    let current = itr.next()\n\n    while(!current.done){\n        console.log(current.value)\n        //four\n        //five\n        //siz\n        current = itr.next()\n    }\n    \n    \n    return(\n        <div className = \"IteratorTest2\">\n            <p>IteratorTest2</p>\n        </div>\n    )\n\n}\n\n\n    \n\n\n\n\nexport default IteratorTest2","/Users/haesoljang/proj/GroupStudy/JAVASCRIPT/janghaesol/js_set/src/iterator-test/IteratorTest3.js",[],"/Users/haesoljang/proj/GroupStudy/JAVASCRIPT/janghaesol/js_set/src/map-test/NewMapInitTest.js",[],"/Users/haesoljang/proj/GroupStudy/JAVASCRIPT/janghaesol/js_set/src/set-test/AddSetTest.js",[],"/Users/haesoljang/proj/GroupStudy/JAVASCRIPT/janghaesol/js_set/src/set-test/ForEachWithSet.js",[],"/Users/haesoljang/proj/GroupStudy/JAVASCRIPT/janghaesol/js_set/src/set-test/NewSetinitTest.js",[],"/Users/haesoljang/proj/GroupStudy/JAVASCRIPT/janghaesol/js_set/src/set-test/SetEntryIterationTest.js",[],"/Users/haesoljang/proj/GroupStudy/JAVASCRIPT/janghaesol/js_set/src/set-test/SetKeyIterationTest.js",[],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":17,"column":9,"nodeType":"85","messageId":"86","endLine":17,"endColumn":27},{"ruleId":"87","severity":1,"message":"88","line":1,"column":7,"nodeType":"89","messageId":"90","endLine":1,"endColumn":22},{"ruleId":"87","severity":1,"message":"88","line":1,"column":7,"nodeType":"89","messageId":"90","endLine":1,"endColumn":22},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"no-sparse-arrays","Unexpected comma in middle of array.","ArrayExpression","unexpectedSparseArray","no-unused-vars","'IteratorManager' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]