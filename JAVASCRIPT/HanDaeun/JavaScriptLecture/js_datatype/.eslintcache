[{"D:\\RayJUN_House\\Study\\Developer\\BITCAMP\\GroupStudy\\HanDaeun\\js_work\\js_datatype\\src\\index.js":"1","D:\\RayJUN_House\\Study\\Developer\\BITCAMP\\GroupStudy\\HanDaeun\\js_work\\js_datatype\\src\\App.js":"2","D:\\RayJUN_House\\Study\\Developer\\BITCAMP\\GroupStudy\\HanDaeun\\js_work\\js_datatype\\src\\reportWebVitals.js":"3","D:\\RayJUN_House\\Study\\Developer\\BITCAMP\\GroupStudy\\HanDaeun\\js_work\\js_datatype\\src\\data_type\\DataTypeBasic.js":"4","D:\\RayJUN_House\\Study\\Developer\\BITCAMP\\GroupStudy\\HanDaeun\\js_work\\js_datatype\\src\\data_type\\DataType.js":"5","D:\\RayJUN_House\\Study\\Developer\\BITCAMP\\GroupStudy\\HanDaeun\\js_work\\js_datatype\\src\\data_type\\RealDataType.js":"6","D:\\RayJUN_House\\Study\\Developer\\BITCAMP\\GroupStudy\\HanDaeun\\js_work\\js_datatype\\src\\data_type\\StringDataType.js":"7","D:\\RayJUN_House\\Study\\Developer\\BITCAMP\\GroupStudy\\HanDaeun\\js_work\\js_datatype\\src\\data_type\\ExpDataType.js":"8","D:\\RayJUN_House\\Study\\Developer\\BITCAMP\\GroupStudy\\HanDaeun\\js_work\\js_datatype\\src\\data_type\\BoolDataType.js":"9","D:\\RayJUN_House\\Study\\Developer\\BITCAMP\\GroupStudy\\HanDaeun\\js_work\\js_datatype\\src\\data_type\\ArrayDataType.js":"10","D:\\RayJUN_House\\Study\\Developer\\BITCAMP\\GroupStudy\\HanDaeun\\js_work\\js_datatype\\src\\data_type\\JsonDataType.js":"11","D:\\RayJUN_House\\Study\\Developer\\BITCAMP\\GroupStudy\\HanDaeun\\js_work\\js_datatype\\src\\data_type\\IfTest.js":"12","D:\\RayJUN_House\\Study\\Developer\\BITCAMP\\GroupStudy\\HanDaeun\\js_work\\js_datatype\\src\\data_type\\ForTest.js":"13","D:\\RayJUN_House\\Study\\Developer\\BITCAMP\\GroupStudy\\HanDaeun\\js_work\\js_datatype\\src\\data_type\\TypeOf.js":"14","D:\\RayJUN_House\\Study\\Developer\\BITCAMP\\GroupStudy\\HanDaeun\\js_work\\js_datatype\\src\\data_type\\LetVar.js":"15","D:\\RayJUN_House\\Study\\Developer\\BITCAMP\\GroupStudy\\HanDaeun\\js_work\\js_datatype\\src\\data_type\\LetVar2.js":"16","D:\\RayJUN_House\\Study\\Developer\\BITCAMP\\GroupStudy\\HanDaeun\\js_work\\js_datatype\\src\\data_type\\LetVar3.js":"17","D:\\RayJUN_House\\Study\\Developer\\BITCAMP\\GroupStudy\\HanDaeun\\js_work\\js_datatype\\src\\data_type\\LetVar4.js":"18","D:\\RayJUN_House\\Study\\Developer\\BITCAMP\\GroupStudy\\HanDaeun\\js_work\\js_datatype\\src\\data_type\\ConstTest.js":"19","D:\\RayJUN_House\\Study\\Developer\\BITCAMP\\GroupStudy\\HanDaeun\\js_work\\js_datatype\\src\\data_type\\SymbolTest.js":"20"},{"size":1545,"mtime":1611819485933,"results":"21","hashOfConfig":"22"},{"size":528,"mtime":499162500000,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"22"},{"size":1209,"mtime":1611813026786,"results":"25","hashOfConfig":"22"},{"size":619,"mtime":1611813010760,"results":"26","hashOfConfig":"22"},{"size":790,"mtime":1611813075646,"results":"27","hashOfConfig":"22"},{"size":833,"mtime":1611813089461,"results":"28","hashOfConfig":"22"},{"size":388,"mtime":1611813039260,"results":"29","hashOfConfig":"22"},{"size":1199,"mtime":1611812982151,"results":"30","hashOfConfig":"22"},{"size":352,"mtime":1611812966733,"results":"31","hashOfConfig":"22"},{"size":473,"mtime":1611813052504,"results":"32","hashOfConfig":"22"},{"size":429,"mtime":1611816136376,"results":"33","hashOfConfig":"22"},{"size":273,"mtime":1611816154125,"results":"34","hashOfConfig":"22"},{"size":520,"mtime":1611816169135,"results":"35","hashOfConfig":"22"},{"size":744,"mtime":1611816182569,"results":"36","hashOfConfig":"22"},{"size":271,"mtime":1611816191667,"results":"37","hashOfConfig":"22"},{"size":329,"mtime":1611816199868,"results":"38","hashOfConfig":"22"},{"size":1479,"mtime":1611818576716,"results":"39","hashOfConfig":"22"},{"size":1257,"mtime":1611819061110,"results":"40","hashOfConfig":"22"},{"size":1091,"mtime":1611820037266,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1lleubt",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\RayJUN_House\\Study\\Developer\\BITCAMP\\GroupStudy\\HanDaeun\\js_work\\js_datatype\\src\\index.js",[],["87","88"],"D:\\RayJUN_House\\Study\\Developer\\BITCAMP\\GroupStudy\\HanDaeun\\js_work\\js_datatype\\src\\App.js",[],"D:\\RayJUN_House\\Study\\Developer\\BITCAMP\\GroupStudy\\HanDaeun\\js_work\\js_datatype\\src\\reportWebVitals.js",[],"D:\\RayJUN_House\\Study\\Developer\\BITCAMP\\GroupStudy\\HanDaeun\\js_work\\js_datatype\\src\\data_type\\DataTypeBasic.js",[],"D:\\RayJUN_House\\Study\\Developer\\BITCAMP\\GroupStudy\\HanDaeun\\js_work\\js_datatype\\src\\data_type\\DataType.js",["89"],"\r\nfunction DataType() {\r\n    // 숫자 + 문자열은 숫자를 강제로 문자열로 바꿈\r\n    var test1 = 7 + \"Test\"\r\n    var test2 = \"7\" + \"test\"\r\n    // 숫자 + 숫자는 숫자로 계산하고\r\n    // 이후에 숫자 + 문자열로 인해 숫자를 문자열로 바꿈\r\n    var numTest = 3 + 7 + \"Test\"\r\n\r\n    console.log(\"DataType: \" + test1)\r\n    console.log(\"DataType: \" + test2)\r\n    console.log(\"DataType: \" + numTest)\r\n\r\n    return (\r\n        <div className=\"DataType\">\r\n            <p>\r\n                {test1}, {test2}, {numTest}.\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DataType","D:\\RayJUN_House\\Study\\Developer\\BITCAMP\\GroupStudy\\HanDaeun\\js_work\\js_datatype\\src\\data_type\\RealDataType.js",[],"D:\\RayJUN_House\\Study\\Developer\\BITCAMP\\GroupStudy\\HanDaeun\\js_work\\js_datatype\\src\\data_type\\StringDataType.js",[],"D:\\RayJUN_House\\Study\\Developer\\BITCAMP\\GroupStudy\\HanDaeun\\js_work\\js_datatype\\src\\data_type\\ExpDataType.js",[],"D:\\RayJUN_House\\Study\\Developer\\BITCAMP\\GroupStudy\\HanDaeun\\js_work\\js_datatype\\src\\data_type\\BoolDataType.js",["90"],"function BoolDataType() {\r\n    var num1 = 3, num2 = 3, num3 = 7\r\n\r\n    var boolRes1 = (num1 === num2)\r\n    var boolRes2 = (num1 === num3)\r\n\r\n    console.log(\"BoolDataType: \" + boolRes1)\r\n    console.log(\"BoolDataType: \" + boolRes2)\r\n\r\n    var testNum = 0\r\n    var testStr = \"0\"\r\n\r\n    // '=='의 경우 데이터만 확인한다.\r\n    // '==='의 경우 데이터와 해당 데이터의 타입을 함께 확인한다.\r\n    // 즉 데이터타입이 다르다면 false가 된다.\r\n\r\n    // 결론: 결국 자바스크립트는 데이터타입이 없는 것이 아니라\r\n    //      실행중에 동적으로 데이터타입이 생성되는 것이다.\r\n    //      데이터타입이 없다고 얘기하는 것은 매우 큰 오개념이다.\r\n    var boolRes3 = (testNum == testStr)\r\n    var boolRes4 = (testNum === testStr)\r\n\r\n    console.log(\"BoolDataType: \" + boolRes3)\r\n    console.log(\"BoolDataType: \" + boolRes4)\r\n\r\n    return (\r\n        <div className=\"BoolDataType\">\r\n            <p>\r\n                {boolRes1.toString()}, {boolRes2.toString()}<br/>\r\n                {boolRes3.toString()}, {boolRes4.toString()}<br/>\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BoolDataType","D:\\RayJUN_House\\Study\\Developer\\BITCAMP\\GroupStudy\\HanDaeun\\js_work\\js_datatype\\src\\data_type\\ArrayDataType.js",[],"D:\\RayJUN_House\\Study\\Developer\\BITCAMP\\GroupStudy\\HanDaeun\\js_work\\js_datatype\\src\\data_type\\JsonDataType.js",[],"D:\\RayJUN_House\\Study\\Developer\\BITCAMP\\GroupStudy\\HanDaeun\\js_work\\js_datatype\\src\\data_type\\IfTest.js",[],"D:\\RayJUN_House\\Study\\Developer\\BITCAMP\\GroupStudy\\HanDaeun\\js_work\\js_datatype\\src\\data_type\\ForTest.js",[],"D:\\RayJUN_House\\Study\\Developer\\BITCAMP\\GroupStudy\\HanDaeun\\js_work\\js_datatype\\src\\data_type\\TypeOf.js",[],"D:\\RayJUN_House\\Study\\Developer\\BITCAMP\\GroupStudy\\HanDaeun\\js_work\\js_datatype\\src\\data_type\\LetVar.js",["91"],"function LetVar() {\r\n    let num = 77\r\n\r\n    console.log(\"num = \" + num)\r\n    console.log(\"let은 Hoisting 되지 않으며 let 위에서 해당 변수를 사용할 수 없다.\")\r\n    console.log(\"var는 되나요 ? \" + varTest + \" 는 되네 ?!\")\r\n\r\n    var varTest = \"이거 되는거 맞냐 ?\"\r\n\r\n    const conNum = 33\r\n\r\n    varTest = \"정말 되는거야 ?\"\r\n\r\n    console.log(\"conNum = \" + conNum)\r\n    console.log(\"const는 반드시 선언과 함께 값의 초기화가 이루어져야 한다.\")\r\n\r\n    return (\r\n        <div className=\"LetVar\">\r\n            <p>\r\n                let {num}<br/>\r\n                const {conNum}<br/>\r\n                var {varTest}<br/>\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LetVar","D:\\RayJUN_House\\Study\\Developer\\BITCAMP\\GroupStudy\\HanDaeun\\js_work\\js_datatype\\src\\data_type\\LetVar2.js",[],"D:\\RayJUN_House\\Study\\Developer\\BITCAMP\\GroupStudy\\HanDaeun\\js_work\\js_datatype\\src\\data_type\\LetVar3.js",["92"],"function LetVar3() {\r\n    var varNum = 33\r\n\r\n    console.log(\"var test: \" + varNum)\r\n\r\n    var varNum = \"뭐야 ?\"\r\n\r\n    console.log(\"var test: \" + varNum)\r\n\r\n    return (\r\n        <div className=\"LetVar3\">\r\n            <p>\r\n                var {varNum}<br/>\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LetVar3","D:\\RayJUN_House\\Study\\Developer\\BITCAMP\\GroupStudy\\HanDaeun\\js_work\\js_datatype\\src\\data_type\\LetVar4.js",["93"],"D:\\RayJUN_House\\Study\\Developer\\BITCAMP\\GroupStudy\\HanDaeun\\js_work\\js_datatype\\src\\data_type\\ConstTest.js",[],"D:\\RayJUN_House\\Study\\Developer\\BITCAMP\\GroupStudy\\HanDaeun\\js_work\\js_datatype\\src\\data_type\\SymbolTest.js",[],{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":5,"column":21,"nodeType":"100","messageId":"101","endLine":5,"endColumn":22},{"ruleId":"102","severity":1,"message":"103","line":20,"column":29,"nodeType":"100","messageId":"104","endLine":20,"endColumn":31},{"ruleId":"105","severity":1,"message":"106","line":6,"column":33,"nodeType":"107","messageId":"108","endLine":6,"endColumn":40},{"ruleId":"109","severity":1,"message":"110","line":6,"column":9,"nodeType":"107","messageId":"111","endLine":6,"endColumn":15},{"ruleId":null,"fatal":true,"severity":2,"message":"112","line":9,"column":9},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","eqeqeq","Expected '===' and instead saw '=='.","unexpected","no-use-before-define","'varTest' was used before it was defined.","Identifier","usedBeforeDefined","no-redeclare","'varNum' is already defined.","redeclared","Parsing error: Identifier 'letNum' has already been declared\n\n\u001b[0m \u001b[90m  7 | \u001b[39m    \u001b[90m// let 과 var의 차이점은 뭐지 ?\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m  8 | \u001b[39m    \u001b[90m// 호이스팅(Hoisting)\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  9 | \u001b[39m    \u001b[36mvar\u001b[39m letNum \u001b[33m=\u001b[39m \u001b[32m\"뭐야 ?\"\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 10 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 11 | \u001b[39m    \u001b[90m// 호이스팅은 모든 변수가 프로그램 시작시\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 12 | \u001b[39m    \u001b[90m// 최선두에 선언하는 형식과 같이 동작하는 것을 의미한다.\u001b[39m\u001b[0m","no-global-assign","no-unsafe-negation"]