[{"/Users/jinwookoh/Bitcamp/GroupStudy/JAVASCRIPT/Jinwook/js_0203/src/index.js":"1","/Users/jinwookoh/Bitcamp/GroupStudy/JAVASCRIPT/Jinwook/js_0203/src/App.js":"2","/Users/jinwookoh/Bitcamp/GroupStudy/JAVASCRIPT/Jinwook/js_0203/src/reportWebVitals.js":"3","/Users/jinwookoh/Bitcamp/GroupStudy/JAVASCRIPT/Jinwook/js_0203/src/exercise/Prob.js":"4","/Users/jinwookoh/Bitcamp/GroupStudy/JAVASCRIPT/Jinwook/js_0203/src/js_set/set-test/NewSetTest.js":"5","/Users/jinwookoh/Bitcamp/GroupStudy/JAVASCRIPT/Jinwook/js_0203/src/js_set/set-test/NewSetintitTest.js":"6","/Users/jinwookoh/Bitcamp/GroupStudy/JAVASCRIPT/Jinwook/js_0203/src/js_set/set-test/AddSetTest.js":"7","/Users/jinwookoh/Bitcamp/GroupStudy/JAVASCRIPT/Jinwook/js_0203/src/js_set/set-test/SetkeyIteratorTest.js":"8","/Users/jinwookoh/Bitcamp/GroupStudy/JAVASCRIPT/Jinwook/js_0203/src/js_set/set-test/SetentryIteratorTest.js":"9","/Users/jinwookoh/Bitcamp/GroupStudy/JAVASCRIPT/Jinwook/js_0203/src/js_set/map-test/NewMapTest.js":"10","/Users/jinwookoh/Bitcamp/GroupStudy/JAVASCRIPT/Jinwook/js_0203/src/js_set/map-test/NewMapInitTest.js":"11","/Users/jinwookoh/Bitcamp/GroupStudy/JAVASCRIPT/Jinwook/js_0203/src/js_set/map-test/MapSetTest.js":"12","/Users/jinwookoh/Bitcamp/GroupStudy/JAVASCRIPT/Jinwook/js_0203/src/js_set/map-test/MapDeleteTest.js":"13","/Users/jinwookoh/Bitcamp/GroupStudy/JAVASCRIPT/Jinwook/js_0203/src/js_set/map-test/MapIterationTest.js":"14","/Users/jinwookoh/Bitcamp/GroupStudy/JAVASCRIPT/Jinwook/js_0203/src/js_set/for-test/ForWithSetMap.js":"15","/Users/jinwookoh/Bitcamp/GroupStudy/JAVASCRIPT/Jinwook/js_0203/src/js_set/iterator-test/IteratorTest.js":"16","/Users/jinwookoh/Bitcamp/GroupStudy/JAVASCRIPT/Jinwook/js_0203/src/js_set/iterator-test/IteratorTest2.js":"17","/Users/jinwookoh/Bitcamp/GroupStudy/JAVASCRIPT/Jinwook/js_0203/src/js_set/iterator-test/IteratorTest3.js":"18","/Users/jinwookoh/Bitcamp/GroupStudy/JAVASCRIPT/Jinwook/js_0203/src/js_set/set-test/ForEachWithSet.js":"19","/Users/jinwookoh/Bitcamp/GroupStudy/JAVASCRIPT/Jinwook/js_0203/src/exercise/ProbRefactoring.js":"20"},{"size":1911,"mtime":1612681716195,"results":"21","hashOfConfig":"22"},{"size":528,"mtime":1612312950569,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":1612312950570,"results":"24","hashOfConfig":"22"},{"size":7008,"mtime":1612449846148,"results":"25","hashOfConfig":"22"},{"size":246,"mtime":1612330614760,"results":"26","hashOfConfig":"22"},{"size":335,"mtime":1612346171394,"results":"27","hashOfConfig":"22"},{"size":479,"mtime":1612346173988,"results":"28","hashOfConfig":"22"},{"size":590,"mtime":1612346186623,"results":"29","hashOfConfig":"22"},{"size":524,"mtime":1612340843813,"results":"30","hashOfConfig":"22"},{"size":246,"mtime":1612332068393,"results":"31","hashOfConfig":"22"},{"size":394,"mtime":1612346163203,"results":"32","hashOfConfig":"22"},{"size":530,"mtime":1612333432357,"results":"33","hashOfConfig":"22"},{"size":404,"mtime":1612333775927,"results":"34","hashOfConfig":"22"},{"size":683,"mtime":1612334105092,"results":"35","hashOfConfig":"22"},{"size":562,"mtime":1612334417919,"results":"36","hashOfConfig":"22"},{"size":908,"mtime":1612336414609,"results":"37","hashOfConfig":"22"},{"size":757,"mtime":1612336613184,"results":"38","hashOfConfig":"22"},{"size":571,"mtime":1612336772362,"results":"39","hashOfConfig":"22"},{"size":607,"mtime":1612346175337,"results":"40","hashOfConfig":"22"},{"size":4095,"mtime":1612698082967,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"16ay0qg",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"49"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"55"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"55"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/jinwookoh/Bitcamp/GroupStudy/JAVASCRIPT/Jinwook/js_0203/src/index.js",[],"/Users/jinwookoh/Bitcamp/GroupStudy/JAVASCRIPT/Jinwook/js_0203/src/App.js",[],["88","89"],"/Users/jinwookoh/Bitcamp/GroupStudy/JAVASCRIPT/Jinwook/js_0203/src/reportWebVitals.js",[],["90","91"],"/Users/jinwookoh/Bitcamp/GroupStudy/JAVASCRIPT/Jinwook/js_0203/src/exercise/Prob.js",["92","93","94","95","96"],"    // 연습 문제: 팀 로또 ?!\n// 참가자는 총 1000명이다.\n// 참가자들은 이 로또 배틀에 참여하기 위해 각자 1000만원을 지불한다.\n// 참가자들은 1 ~ 10000 사이의 숫자를 할당 받는다.\n// 팀원은 랜덤하게 4명씩 짝을 짓는다(총 250개의 팀)\n// 로또 당첨은 1013의 배수를 뽑은 사람이 이긴것으로 간주한다.\n\n// 배당금은 아래 원칙에 따라 지급한다.\n// 모든 팀원이 로또에 당첨된 경우: 승리 수당 배수가 2^4으로 16배 뛴다.\n// 팀원중 3명이 당첨된 경우: 승리 수당 배수가 2^3으로 8배 뛴다.\n// 팀원중 2명이 당첨된 경우: 승리 수당 배수가 2^2으로 4배 뛴다.\n// 팀원중 1명이 당첨된 경우: 원래 수당 그대로 받는다.\n\n// 1) 16: 16: 8: 8: 4: 1: 1: 1: 1: 1: 1: 1: 1: 1\n// 2) 16\n// 3) 8\n// 4) 4\n// 5) 1\n\n// 주최측은 무조건적으로 전체 비용의 33%를 가져간다.\n// 승리팀의 상태를 출력하고 승리 수당을 분배하여 표시하도록 한다.\n\nconst AllocRandomNumber = (arr) => {\n\n    console.log(\"AllocRandomNumber Called\")\n\n    for(var i = 0; i < arr.length; i++) {\n        arr[i] = Math.floor(Math.random() * 10000) + 1\n    }\n}\n\n\n\nconst CreateRandomTeam = (arr, num) => {\n    console.log(\"CreateRandomTeam Called\")\n\n    const ERROR = -1\n\n    let randNum\n    let range = arr.length / num\n\n    let checkTeamArrCnt = new Array(250)\n\n    // 1번째 실수: i, j의 순서를 혼동하여 거꾸로 적음\n    //           250 * 0 ~ 3 + 0 ~ 3 ===>\n    //           0 ~ 3, 250 ~ 253, 500 ~ 503, 750 ~ 753\n    // 2번째 실수: 인덱싱을 잘못했다는 것을 생각하지 않고 내부에 또 루프를 만듬\n\n    // Sol: 현재 아래 코드가 실수한 부분을 수정한 코드\n\n    // 같은 팀원들에게 같은 숫자를 부여하겠다는 의미(250개가 나오니까)\n    for(var i = 0; i < range; ) {   // 250\n        // 1번팀, 2번팀, 3번팀 ...\n        randNum = Math.floor(Math.random() * 250) + 1\n\n        if(arr.indexOf(randNum) == ERROR) {\n            for (var j = 0; j < num; j++) {   // 4\n\n                // 전략\n                // 1) 그냥 다 검사해서 집어넣기\n                //    모든 검사를 수행하므로 속도가 느려짐\n                //    반면 팀원들은 인접하지 않은 상태로 배치됨\n                // 2) 검사는 단순화하고 for문을 한 번 더 돌자!\n                //    (내부에 4개짜리 루프를 돌린다)\n                //    팀원끼리 인접해있게 됨\n\n                // 우리는 2번 전략을 사용하도록 한다.\n\n                // 0 ~ 999 ---> i, j로 표현하는 방법에 대한 고민이 필요\n                // j = 0 ~ 3\n                // i = 0 ~ 250\n                // i * range + j\n                arr[i * num + j] = randNum\n            }\n\n            i++\n        }\n    }\n}\n\nconst CheckWinner = (arr, winArr) => {\n    // const CRITERIA = 1013\n    // const CRITERIA = 241\n    const CRITERIA = 2\n\n    for(var i = 0; i < arr.length; i++) {\n        if(!(arr[i] % CRITERIA)) {\n            winArr[i] = 1\n        } else {\n            winArr[i] = 0\n        }\n    }\n}\n\nArray.prototype.arrDivide = function (num) {\n    let arr = this\n    let len = arr.length\n    // 딱 떨어지는 경우엔 floor OK\n    // 나머지가 존재할 경우 ceil 올림으로 처리하면 될 듯 ?\n    let cnt = Math.ceil(len / num)\n\n    let newArr = []\n\n    for(var i = 0; i < cnt; i++) {\n        newArr.push(arr.splice(0, num))\n    }\n\n    return newArr\n}\n\nArray.prototype.printArr = function(num) {\n    let arr = this\n    let len = arr.length\n\n    for (var i = 0; i < len; i += num) {\n        console.log(arr[i], arr[i + 1], arr[i + 2], arr[i + 3])\n    }\n}\n\nconst CalcDividend = (teamArr, winArr, price) => {\n    const ALL = 16\n    const THREEFOUR = 8\n    const TWOFOUR = 4\n    const ZERO = 0\n\n    const TEAMMEMNUM = 4\n\n    // filter, every\n    let divWinArr = winArr.arrDivide(TEAMMEMNUM)\n\n    let teamNum = divWinArr.length\n    let allClearRateArr = new Array(teamNum)\n    let subClearRateArr = new Array(teamNum)\n\n    for(var i = ZERO; i < teamNum; i++) {\n        allClearRateArr[i] = divWinArr[i].every(allClear)\n        subClearRateArr[i] = divWinArr[i].reduce(subClear)\n    }\n\n    function allClear(value) {\n        return value > ZERO\n    }\n\n    function subClear(total, value) {\n        return total + value\n    }\n\n    console.log('All Clear Team: ' + allClearRateArr)\n    console.log('Sub Clear Team: ' + subClearRateArr)\n\n    // For Debugging\n    //divWinArr.printArr(TEAMMEMNUM)\n\n    //console.log(\"divWinArr = \" + divWinArr)\n\n    // 현재까지 체크된 것이 배당금 16배수인 팀을 확보함\n    // 배당금 8배, 4배, 1배인 팀도 확보한 상태\n    // 전체 상금을 몇 등분할지에 대한 계산이 필요하다.\n    let dividendRate = allClearRateArr.reduce(checkTrueNum)\n\n    function checkTrueNum(total, value) {\n        if(value == true) {\n            return total + ALL\n        } else {\n            return total\n        }\n    }\n\n    console.log(\"All Clear Dividend Rate = \" + dividendRate)\n\n    dividendRate += subClearRateArr.reduce(allSum)\n\n    function allSum(total, value) {\n        return total + value\n    }\n\n    console.log(\"Total Dividend Rate = \" + dividendRate)\n\n    let dividend = Math.round(price / dividendRate)\n\n    console.log(\"1배수 배당금은 \" + dividend + \"입니다.\")\n    console.log(\"인당 배당금은 \" +\n        Math.round(dividend / TEAMMEMNUM) + \"입니다.\")\n\n    console.log(\"4배수 배당금은 \" + TWOFOUR * dividend + \"입니다.\")\n    console.log(\"인당 배당금은 \" +\n        Math.round(TWOFOUR * dividend / TEAMMEMNUM) + \"입니다.\")\n\n    console.log(\"8배수 배당금은 \" + THREEFOUR * dividend + \"입니다.\")\n    console.log(\"인당 배당금은 \" +\n        Math.round(THREEFOUR * dividend / TEAMMEMNUM) + \"입니다.\")\n\n    console.log(\"16배수 배당금은 \" + ALL * dividend + \"입니다.\")\n    console.log(\"인당 배당금은 \" +\n        Math.round(ALL * dividend / TEAMMEMNUM) + \"입니다.\")\n}\n\nconst Prob = () => {\n    const MAXTEAMNUM = 4\n    const NUMOFPERSON = 1000\n    const FEE = 10000000\n    const PARTICIPANTSTAKE = 0.67\n    const PRICE = NUMOFPERSON * FEE * PARTICIPANTSTAKE\n\n    console.log(\"상금 = \" + PRICE)\n\n    let arr = new Array(NUMOFPERSON)\n    let teamArr = new Array(NUMOFPERSON)\n    let WinnerArr = new Array(NUMOFPERSON)\n\n    AllocRandomNumber(arr)\n    console.log(\"After AllocRandomNumber() = \" + arr)\n\n    CreateRandomTeam(teamArr, MAXTEAMNUM)\n    console.log(\"After CreateRandomTeam() = \" + teamArr)\n\n    CheckWinner(arr, WinnerArr)\n    console.log(\"After CheckWinner() = \" + WinnerArr)\n\n    CalcDividend(teamArr, WinnerArr, PRICE)\n    console.log(\"팀 로또가 성공적으로 마무리 되었습니다.\")\n    console.log(\"다음에도 잘 부탁드립니다 호갱님 ^^\")\n\n    return (\n        <div className=\"Prob\">\n            <p>Prob</p>\n        </div>\n    )\n}\n\nexport default Prob","/Users/jinwookoh/Bitcamp/GroupStudy/JAVASCRIPT/Jinwook/js_0203/src/js_set/set-test/NewSetTest.js",[],["97","98"],"/Users/jinwookoh/Bitcamp/GroupStudy/JAVASCRIPT/Jinwook/js_0203/src/js_set/set-test/NewSetintitTest.js",[],"/Users/jinwookoh/Bitcamp/GroupStudy/JAVASCRIPT/Jinwook/js_0203/src/js_set/set-test/AddSetTest.js",[],"/Users/jinwookoh/Bitcamp/GroupStudy/JAVASCRIPT/Jinwook/js_0203/src/js_set/set-test/SetkeyIteratorTest.js",[],"/Users/jinwookoh/Bitcamp/GroupStudy/JAVASCRIPT/Jinwook/js_0203/src/js_set/set-test/SetentryIteratorTest.js",[],"/Users/jinwookoh/Bitcamp/GroupStudy/JAVASCRIPT/Jinwook/js_0203/src/js_set/map-test/NewMapTest.js",[],"/Users/jinwookoh/Bitcamp/GroupStudy/JAVASCRIPT/Jinwook/js_0203/src/js_set/map-test/NewMapInitTest.js",[],"/Users/jinwookoh/Bitcamp/GroupStudy/JAVASCRIPT/Jinwook/js_0203/src/js_set/map-test/MapSetTest.js",[],"/Users/jinwookoh/Bitcamp/GroupStudy/JAVASCRIPT/Jinwook/js_0203/src/js_set/map-test/MapDeleteTest.js",[],"/Users/jinwookoh/Bitcamp/GroupStudy/JAVASCRIPT/Jinwook/js_0203/src/js_set/map-test/MapIterationTest.js",[],"/Users/jinwookoh/Bitcamp/GroupStudy/JAVASCRIPT/Jinwook/js_0203/src/js_set/for-test/ForWithSetMap.js",[],"/Users/jinwookoh/Bitcamp/GroupStudy/JAVASCRIPT/Jinwook/js_0203/src/js_set/iterator-test/IteratorTest.js",["99"],"class IteratorManger{\n    constructor(){\n        this.itrData = []\n    }\n    add(data){\n        this.itrData.push(data)\n    }\n    [Symbol.iterator](){\n        return this.itrData.values()\n    }\n}\n\nconst IteratorTest= () => {\n    let iterData = [\"one\", \"two\", \"three\"]\n\n    for(let entry of iterData){\n        console.log(entry)\n    }\n\n    let varData = [\"four\",\"five\",\"six\"]\n\n    let itr = varData[Symbol.iterator]()\n\n    console.log(itr.next())\n    console.log(itr.next())\n    console.log(itr.next())\n    console.log(itr.next())\n    // iteration 이 완료 되면 true 리턴함\n\n    let varItr = varData.values()\n\n    console.log(varItr.next())\n    console.log(varItr.next())\n    console.log(varItr.next())\n    console.log(varItr.next())\n\n    return(\n        <div className = \"IteratorTest\">\n            <p>\n            IteratorTest\n            </p>\n        </div>\n    )\n    \n}\n\nexport default IteratorTest","/Users/jinwookoh/Bitcamp/GroupStudy/JAVASCRIPT/Jinwook/js_0203/src/js_set/iterator-test/IteratorTest2.js",["100","101"],"class IteratorManger{\n    constructor(){\n        this.itrData = []\n    }\n    add(data){\n        this.itrData.push(data)\n    }\n    [Symbol.iterator](){\n        return this.itrData.values()\n    }\n}\n\nconst IteratorTest2= () => {\n    let iterData = [\"one\", \"two\", \"three\"]\n\n    for(let entry of iterData){\n        console.log(entry)\n    }\n\n    let varData = [\"four\",\"five\",\"six\"]\n\n    let itr = varData[Symbol.iterator]()\n\n    \n    let varItr = varData.values()\n\n    let current = itr.next()\n\n    while(!current.done){\n        console.log(current.value)\n        current = itr.next()\n    }\n\n\n    return(\n        <div className = \"IteratorTest2\">\n            <p>\n            IteratorTest2\n            </p>\n        </div>\n    )\n    \n}\n\nexport default IteratorTest2","/Users/jinwookoh/Bitcamp/GroupStudy/JAVASCRIPT/Jinwook/js_0203/src/js_set/iterator-test/IteratorTest3.js",[],"/Users/jinwookoh/Bitcamp/GroupStudy/JAVASCRIPT/Jinwook/js_0203/src/js_set/set-test/ForEachWithSet.js",[],"/Users/jinwookoh/Bitcamp/GroupStudy/JAVASCRIPT/Jinwook/js_0203/src/exercise/ProbRefactoring.js",["102","103","104","105","106","107","108","109","110","111"],{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"112","replacedBy":"116"},{"ruleId":"114","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":42,"column":9,"nodeType":"120","messageId":"121","endLine":42,"endColumn":24},{"ruleId":"122","severity":1,"message":"123","line":56,"column":33,"nodeType":"124","messageId":"125","endLine":56,"endColumn":35},{"ruleId":"126","severity":1,"message":"127","line":95,"column":1,"nodeType":"128","messageId":"125","endLine":109,"endColumn":2},{"ruleId":"126","severity":1,"message":"127","line":111,"column":1,"nodeType":"128","messageId":"125","endLine":118,"endColumn":2},{"ruleId":"122","severity":1,"message":"123","line":162,"column":18,"nodeType":"124","messageId":"125","endLine":162,"endColumn":20},{"ruleId":"112","replacedBy":"129"},{"ruleId":"114","replacedBy":"130"},{"ruleId":"118","severity":1,"message":"131","line":1,"column":7,"nodeType":"120","messageId":"121","endLine":1,"endColumn":21},{"ruleId":"118","severity":1,"message":"131","line":1,"column":7,"nodeType":"120","messageId":"121","endLine":1,"endColumn":21},{"ruleId":"118","severity":1,"message":"132","line":25,"column":9,"nodeType":"120","messageId":"121","endLine":25,"endColumn":15},{"ruleId":"122","severity":1,"message":"123","line":22,"column":37,"nodeType":"124","messageId":"125","endLine":22,"endColumn":39},{"ruleId":"133","severity":1,"message":"134","line":78,"column":13,"nodeType":"120","messageId":"135","endLine":78,"endColumn":14},{"ruleId":"122","severity":1,"message":"123","line":80,"column":31,"nodeType":"124","messageId":"125","endLine":80,"endColumn":33},{"ruleId":"122","severity":1,"message":"123","line":82,"column":37,"nodeType":"124","messageId":"125","endLine":82,"endColumn":39},{"ruleId":"122","severity":1,"message":"123","line":85,"column":37,"nodeType":"124","messageId":"125","endLine":85,"endColumn":39},{"ruleId":"122","severity":1,"message":"123","line":88,"column":37,"nodeType":"124","messageId":"125","endLine":88,"endColumn":39},{"ruleId":"136","severity":1,"message":"137","line":112,"column":19,"nodeType":"138","messageId":"139","endLine":112,"endColumn":30},{"ruleId":"136","severity":1,"message":"137","line":113,"column":21,"nodeType":"138","messageId":"139","endLine":113,"endColumn":32},{"ruleId":"136","severity":1,"message":"137","line":115,"column":24,"nodeType":"138","messageId":"139","endLine":115,"endColumn":35},{"ruleId":"133","severity":1,"message":"134","line":124,"column":13,"nodeType":"120","messageId":"135","endLine":124,"endColumn":14},"no-native-reassign",["140"],"no-negated-in-lhs",["141"],["140"],["141"],"no-unused-vars","'checkTeamArrCnt' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-extend-native","Array prototype is read only, properties should not be added.","AssignmentExpression",["140"],["141"],"'IteratorManger' is defined but never used.","'varItr' is assigned a value but never used.","no-redeclare","'i' is already defined.","redeclared","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","no-global-assign","no-unsafe-negation"]