package Sixth;

public class FirstArrayTest {
    public static void main(String[] args) {
        // 배열은 왜 사용하는가?
        // 은행의 계좌로 예를들면
        // 우리나라 인구 5000만의 계좌의 인식번호를 매기는데
        // 5000만개의 int형 변수를 만들 것인가?
        // 직접 입력하는 것이 불가능하기 때문에 배열을 사용해서 손쉽게
        // 값을 할당할 수 있다.

        // 아래 예의 경우 만약 배열이 없었다면
        // int arr1, arr2, arr3, arr4
        // int arr5, arr6, arr7, arr8 ...
        // 위와 같이 변수를 만들어야 했을 것이다.
        // 그러나 배열을 사용하면 아래 코드로 끝이난다.

        // 배열 선언 문법
        // 1. 데이터타입을 적는다.
        // 2. 대괄호를 열고 닫는다.
        // 3. 변수 이름을 지정하듯 배열의 이름을 지정한다.
        // 4. 필요하다면 값을 할당한다.
        //    값을 할당하는 방법
        //    4-1. new를 적는다.
        //    4-2. 데이터 타입을 적고 대괄호를 열고 닫는다.
        //    4-3. 몇 개를 만들 것인지 대괄호 내부에 숫자를 적느다.
        //    * 변칙수:
        //      중괄호를 열고 닫은 이후
        //      아래와 같이 미리 값을 할당할 수도 있다.
        //      {1, 2, 4, 5, 2342, 22342}
        //      하지만 new를 적는 것이 표준

        // 아래 예시는 int형 다발을 이름 arr로 만들어 공간 10개를 할당한 것이다.
        int[] arr = new int[10];

        // 배열의 시작 인덱스 무조건 0 부터 시작한다.
        // ------------------------------------------
        // | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 |  for 문이 끝났을 때
        // ------------------------------------------
        //  [0] [1] [2] [3] [4] [5] [6] [7] [8] [9]

        // ------------------------------------------
        // |   |   |   |   |   |   |   |   |   |    |  for 문 이전
        // ------------------------------------------
        //  [0] [1] [2] [3] [4] [5] [6] [7] [8] [9]

        for(int i = 0; i < 10; i++) {
            arr[i] = i + 1;
            System.out.printf("arr[%d] = %d\n", i, arr[i]);
        }
    }
}
