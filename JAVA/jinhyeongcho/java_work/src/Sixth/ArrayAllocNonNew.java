package Sixth;

public class ArrayAllocNonNew {
    public static void main(String[] args) {
        // 배열을 왜 사용하는가?
        // 계좌 금액 관리하는 프로그램을 만든다.
        // 4000만개의 int형 변수를 만들것인가?
        // 4000만개의 직접 입력은 어렵.
        // 그래서 배열을 사용해 손쉽게 4000만개를 할당

        // 아래 예의 경우 만약 배열이 없었다면
        // int arr1, arr2, arr3, arr4, arr5;
        // int arr6, arr7, arr8, arr9, arr10;
        // 위와 같이 변수를 만들어야 했을것이다.
        // 그러나 배열을 사용하니 아래 코드로 끝이 났다.


        // 배열을 만드는 방법
        // 1. 데이터 타입을 적는다.
        // 2. 대괄흐를 열고 닫는다.
        // 3. 변수 이름을 지정하듯이 배열의 이름을 지정한다.
        // 4. 필요하다면 값을 할당한다.
        //    값을 할당하는 방법
        //    4-1. new 를 적는다ㅣ
        //    4-2. 데이터타입을 적고 대괄호를 열고 닫는다ㅣ.
        //    4-3. 몇 개를 만들것인지 대괄호 내부에 숫자를 적는다.
        //    *변칙수:ArrayAllocNonNew
        //    중괄호를 열고 닫은 이후
        //    아래와 같이 미리 값을 할당할 수도 있다.
        //    {1, 2, 4, 5, 2342, 25335, 30}


        // 속도는 new를 사용하지 않는 케이스가 더 빠르다.

        int[] arr = {1,2,3,4,5,6,7,8,9,10};
        //  |   |   |   |   |   |   |   |   |   |   | 미리 값을 할당
        //----------------------------------
        //   [0] [1] [2] [3] [4] [5] [6] [7] [8]  [9]


        // arr.length - 현재 배열의 원소 개수를 구한다.
        for (int i  =0; i < arr.length; i++){
            arr[i] = i + 1;
            System.out.printf("arr[%d] = %d\n", i, arr[i]);
        }

    }
}
