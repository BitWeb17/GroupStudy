인터페이스의 사용 목적에 대해 기술해보도록 한다.
=========================================================================================================

인터페이스란 일종의 추상클래스로 추상클래스를 부분적으로만 완성된 '미완성 설계도' 라고 한다면, 인터페이스는
구현된 것은 없고 밑그림만 그려진 '기본 설계도'라고 할 수 있다. 추상클래스처럼 완성되지 않은 불완전한 것이기
때문에 그 자체만으로 사용되기 보다는 다른 클래스를 작성하는데 도움을 줄 목적으로 작성된다.

인터페이스의 장점

1.개발시간을 단축시킬 수 있다.
  일단 작성되고 나면, 이를 사용해서 프로그램을 작성하는 것이 가능하다. 매서드를 호출하는쪽에서는 매서드의
  내용에 관계없이 선언부만 알면되기 때문이다.
   그리고 동시에 다른 한 쪽에서는 인터페이스를 구현하는 클래스를 작성하게 되면, 기다리지 않고 양쪽에서
  동시에 개발을 진행할 수 있다.

2.표준화가 가능하다.
  프로젝트에 사용되는 기본 틀을 인터페이스로 작성한 다음, 개발자들에게 인터페이스를 구현하여 프로그램을
  작성하도록 함으로써 보다 일관되고 정형화된 프로그램의 개발이 가능하다.

3.서로 관계없는 클래스들에게 관계를 맺어 줄 수 있다.
  서로 상속관계나 같은 조상클래스를 가지고 있지 않은 아무 관계없는 클래스들에게 하나의 인터페이스를
  공통적으로 구현하도록 함으로써 관계를 맺어 줄 수 있다.

4.독립적인 프로그래밍이 가능하다.
  클래스의 선언과 구현을 분리시킬 수 있기 때문에 실제구현에 독립적인 프로그램을 작성하는 것이 가능하다.
  클래스와 클래스간의 직접적인 관계를 인터페이스를 이용하여 간접적인 관계로 변경하면, 한 클래스의 변경이
  관련된 다른 클래스에 영향을 미치지 않 때문이다기

이러한 이유들로 인터페이스를 사용합니다.

