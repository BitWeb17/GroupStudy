리눅스 터미널 명령어

ls                  현재 내가 위치한 장소의 파일 리스트를 볼 수 있다.

ls의 옵션 두 가지
ls -a               all의 의미를 가지고 있어 숨김 파일 포함한 모든 내용을 리스트 형식으로 볼 수 있다.
ls -l               현재 보고 있는 파일의 세부사항을 볼 수 있게 도와준다.
                    d가 붙어있으면 디렉토리를 의미
                    -는 일반 파일을 의미한다.

.                   현재 내가 위치한 디렉토리를 의미한다.
..                  현재 내가 위치한 디렉토리의 상위 디렉토리를 의미한다.

pwd                 현재 내가 위치한 디렉토리가 어디인지 보여준다.
cd 디렉토리명          현재 디렉토리를 디렉토리명에 해당하는 디렉토리로 이동한다.
                    디렉토리를 이동할 때 현재 디렉토리 리스트에 포함된 디렉토리
                    로만 이동가능하다.

~                   홈 디렉토리

clear               지저분한 터미널 화면을 정리한다.

mkdir               make directory

---------------------------------------------------------------------
vi                  편집 명령어로 뒤쪽에 편집할 파일명을 적으면 편집기가 열린다.
                    편집기에는 입력 모드, 커맨드 모드가 있다
                    입력 모드 진입: a 혹은 i, shift + a, shift + i

                    shift + a: 맨 뒷줄에서 입력 모드를 시작
                    shift + i: 맨 앞줄에서 입력 모드를 시작
                    a: 커서 기준 바로 뒷 글자부터 시작
                    i: 현재 커서에서 시작

yy                  1줄 복사
p                   붙여 넣기

d + 숫자 + d         숫자 만큼 줄을 지운다.
y + 숫자 + y         숫자 만큼 줄을 복사한다.

u                   뒤로가기 (windows의 ctrl + z)
ctrl + R            앞으로 가기

%s/바꾸고 싶은 내용/바꾼 후의 내용/g 문자 치환을 해준다.

:set nu             라인 넘버를 보여준다.
:set nonu           라인 넘버를 없애준다.

Ctrl + F            페이지 다운
Ctrl + B            페이지 업

:wq                 저장하고 나가기
:wq!                간혹 강제종료를 하게 되면 readonly가 되는데
                    이 경우에 저장을 하려고 하면 필요한 명령
                    readonly가 나오는 것은 ls -a, ls -al 명령을 입력해서
                    확장자가 .swp인 파일을 삭제하면 해결된다.


---------------------------------------------------------------------

rm 파일명            파일을 삭제한다.
rm -rf 디렉토리명     디렉토리를 삭제한다.

* Git 활용하기
-사본(origin)과 원본(upstream) 연결하기

1) cd proj
2) git clone (GroupStudy의 사본 주소)
   위 명령을 통해서 사본의 내용을 내 컴퓨터에 저장한다.
3) cd GroupStudy
4) git remote -v 으로 origin과 upstream을 확인한다.
5) git remote add upstream (GroupStudy의 원본 주소) - upstream이 없을 경우 이 명령으로 upstream추가
6) git fetch upstream 을 통해 다운 받을 정보를 받아온다.
   fetch: 불러오다.
7) git merge upstream/main 을 통해 실제 컴퓨터에 원본 내용을 저장한다.
   merge: 합치다.
8) git push origin main
   push: 실제로 사본에 커밋한 것을 올리는 것
9) 내용을 추가했다면 git add -> git commit -> git push 순으로 진행
10) 내 사본에 업데이트 된 것을 확인하고 PR(Pull Request)를 요청한다.
11) 관리자가 승인하면 원본에 내용이 업데이트 된 것을 확인할 수 있다.